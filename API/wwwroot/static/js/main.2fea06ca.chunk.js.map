{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.tsx","features/catalog/catalogSlice.ts","features/contact/counterSlice.tsx","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","item","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","useHistory","location","useLocation","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fea06ca.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n  }\r\n  \r\n  export function currencyFormat(amount: number) {\r\n    return '$' + (amount/100).toFixed(2);\r\n  }","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\r\n    'basket/addBasketItemAsync',\r\n    async ({productId, quantity = 1}, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, \r\n    {productId: number, quantity: number, name?: string}>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({productId, quantity}, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const {productId, quantity} = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket?.items[itemIndex].quantity === 0) \r\n                state.basket.items.splice(itemIndex, 1);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n    })\r\n})\r\n\r\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - please login again');\r\n            history.push('/');\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            state.user = action.payload;\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        })\r\n    })\r\n})\r\n\r\nexport const {signOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', productParams.pageNumber.toString());\r\n    params.append('pageSize', productParams.pageSize.toString());\r\n    params.append('orderBy', productParams.orderBy);\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload};\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: 'YARC (yet another redux counter with redux toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {increment, decrement} = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer);\r\n// }\r\n\r\nexport const store = configureStore({\r\nreducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: {error: data}\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorised'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErrors(error));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 && \r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            } \r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n","import { Typography, Pagination } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useState } from \"react\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n    const {currentPage, totalCount, totalPages, pageSize} = metaData;\r\n    const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n    function handlePageChange(page: number) {\r\n        setPageNumber(page);\r\n        onPageChange(page);\r\n    } \r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage-1)*pageSize+1}-\r\n                {currentPage*pageSize > totalCount \r\n                    ? totalCount \r\n                    : currentPage*pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={pageNumber}\r\n                onChange={(e, page) => handlePageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value);\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n                <FormControlLabel \r\n                    control={<Checkbox \r\n                        checked={checkedItems.indexOf(item) !== -1}\r\n                        onClick={() => handleChecked(item)}\r\n                    />} \r\n                    label={item} \r\n                    key={item} \r\n                />\r\n            ))}\r\n        </FormGroup>\r\n    )\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({ value, label }) => (\r\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\r\n                    size=\"small\">\r\n                    Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <ProductCard product={product} />\r\n                    )}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}))\r\n    }, 1000)\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant='outlined'\r\n            fullWidth\r\n            value={searchTerm || ''}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    )\r\n}","import { Grid, Paper } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical' },\r\n    { value: 'priceDesc', label: 'Price - High to low' },\r\n    { value: 'price', label: 'Price - Low to high' },\r\n]\r\n\r\nexport default function Catalog() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [filtersLoaded, dispatch]);\r\n\r\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{mb: 2}}>\r\n                {metaData &&\r\n                <AppPagination \r\n                    metaData={metaData}\r\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\r\n                />}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{height: 400}}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport NotFound from \"../../app/errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync  } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const {basket, status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } : any = useParams();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\r\n    }, [id, item, dispatch, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value > 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n\r\n    if (!product) return <NotFound />\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{mb: 2}} />\r\n                <Typography variant='h4' color='secondary'>${(product.price / 100).toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>    \r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>  \r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>  \r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>  \r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>  \r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField \r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{height: '55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Typography } from \"@mui/material\";\r\n\r\nexport default function ContactPage() {\r\n    return (\r\n        <Typography variant='h2'>\r\n            Contact page\r\n        </Typography>\r\n    )\r\n}","import { Box, Typography } from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\r\n                </div>\r\n            </Slider>\r\n            <Box display='flex' justifyContent='center' sx={{p: 4}} >\r\n                <Typography variant='h1'>Welcome to the store</Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(signOut());\r\n                    dispatch(clearBasket());\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\r\n\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography variant='h6' component={NavLink} exact to='/'\r\n                        sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\n\r\nexport default function ServerError() {\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: Props) {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n       subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingAddItem' + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color='secondary'\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\r\n                            {isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\nexport default function BasketPage() {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n\r\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n\r\n    )\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location.state?.from?.pathname ||  '/catalog');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', { message: error })\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', { message: error })\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', { message: error })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\"\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - you can now login');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch(error => handleApiErrors(error))\r\n                )}\r\n                noValidate sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email address\"\r\n                    {...register('email', { \r\n                        required: 'Email is required',\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*)).[a-z]{2,3}$/,\r\n                            message: 'Not a valid email address'\r\n                        } \r\n                    })}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', { \r\n                        required: 'Password is required',\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message: 'Password is not complex enough'\r\n                        }\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/login'>\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const {user} = useAppSelector(state => state.account);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [])\r\n\r\n    if (loading) return <LoadingComponent message='Loading orders' />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed \r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: ''})\r\n    return (\r\n        <TextField \r\n            {...props}\r\n            {...field}\r\n            fullWidth\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false});\r\n    return (\r\n        <FormControlLabel \r\n            control={\r\n                <Checkbox \r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport AppCheckbox from '../../app/components/AppCheckbox';\r\n\r\nexport default function AddressForm() {\r\n    const { control, formState } = useFormContext();\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label='Full name' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label='Address line 1' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label='Address line 2' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label='State' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zipcode' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label='Country' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox \r\n                        disabled={!formState.isDirty}\r\n                        name='saveAddress' \r\n                        label='Save this as the default address' \r\n                        control={control} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, \r\n    ref: Ref<unknown>){\r\n        const elementRef = useRef<any>();\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            focus: () => elementRef.current.focus\r\n        }));\r\n\r\n        return (\r\n            <Component \r\n                onReady={(element: any) => elementRef.current = element}\r\n                {...props}\r\n            />\r\n        )\r\n    });","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const {basket} = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n      <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Addres line 1 is required'),\r\n        address2: yup.string().required(),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.string().required(),\r\n        country: yup.string().required(),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        })\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid\r\n        } else {\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51K0zDdKpU5lkuwv73uIlrqRFD7CR3sCd5MGeQsNIk0iD0EFZyAF6IpFML35GlvXp5yUsJEHh3PFaN25SPb0yXCjA007D3lN3hU\")\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...' />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light'\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initialising app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container  sx={{ mt: 4 }}>\n          <Switch>\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}